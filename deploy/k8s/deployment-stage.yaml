apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: hub-frontend-deployment-stage
  labels:
    id: hub-frontend-deployment-stage
spec:
  selector:
    matchLabels:
      id: app-hub-frontentd-stage
  template:
    metadata:
      labels:
        id: app-hub-frontentd-stage
    spec:
      containers:
        - name: app-hub-frontend
          image: cr.yandex/crpgcdmv6rgq68b22lqi/hub-frontend-stage:main
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: web
---
apiVersion: v1
kind: Service
metadata:
  name: hub-frontend-service-stage
spec:
  selector:
    id: app-hub-frontentd-stage
  ports:
    - port: 80
      targetPort: 80
      name: web
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/http2-push-preload: "true"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 1M
    cert-manager.io/issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/custom-http-errors: "400,403,404,410,418,429,500,503,504"
    nginx.ingress.kubernetes.io/default-backend: custom-errors-service
  name: hub-frontend-web-stage
spec:
  tls:
    - hosts:
        - stage.hub.crtweb.ru
      secretName: hub-frontend-tls-stage
  rules:
    - host: stage.hub.crtweb.ru
      http:
        paths:
          - backend:
              serviceName: hub-frontend-service-stage
              servicePort: web
